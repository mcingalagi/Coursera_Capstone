swagger: '2.0'
info:
  title: getParty API
  version: '1.0'
host: your-api.com
schemes:
  - https
paths:
  /getparty:
    post:
      summary: getParty endpoint
      consumes:
        - application/xml
      produces:
        - application/xml
      parameters:
        - in: body
          name: requestBody
          required: true
          schema:
            type: object
            properties:
              TCRMService:
                type: object
                properties:
                  RequestControl:
                    type: object
                    properties:
                      requestID:
                        type: string
                      DWLControl:
                        type: object
                        properties:
                          requesterName:
                            type: string
                          requesterLocale:
                            type: string
                  TCRMInquiry:
                    type: object
                    properties:
                      InquiryType:
                        type: string
                      InquiryParam:
                        type: object
                        properties:
                          tcrmParam:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
      responses:
        '200':
          description: OK





swagger: "2.0"
info:
  version: "1.0.0"
  title: "Example API"
consumes:
  - application/xml
produces:
  - application/xml
paths:
  /example:
    post:
      summary: "Example endpoint"
      parameters:
        - in: body
          name: body
          description: "Example XML request"
          required: true
          schema:
            type: object
            xml:
              name: RequestRoot
              namespace: "http://example.com/xml"
              prefix: "req"
            properties:
              requiredField:
                type: string
                description: "A required field"
                xml:
                  name: RequiredField
                  namespace: "http://example.com/xml"
                  prefix: "req"
              optionalField:
                type: string
                description: "An optional field"
                xml:
                  name: OptionalField
                  namespace: "http://example.com/xml"
                  prefix: "req"
                  required: false
      responses:
        200:
          description: "Successful response"
          schema:
            type: object
            xml:
              name: ResponseRoot
              namespace: "http://example.com/xml"
              prefix: "res"
            properties:
              result:
                type: string
                description: "The result of the operation"
                xml:
                  name: Result
                  namespace: "http://example.com/xml"
                  prefix: "res"
              optionalField:
                type: string
                description: "An optional field"
                xml:
                  name: OptionalField
                  namespace: "http://example.com/xml"
                  prefix: "res"
                  required: false





swagger: "2.0"
info:
  version: "1.0.0"
  title: "Example API"
consumes:
  - application/xml
produces:
  - application/xml
paths:
  /example:
    post:
      summary: "Example endpoint"
      parameters:
        - in: body
          name: body
          description: "Example XML request"
          required: true
          schema:
            type: object
            xml:
              name: RequestRoot
              namespace: "http://example.com/xml"
              prefix: "req"
            properties:
              exampleField:
                type: string
                description: "An example field"
                xml:
                  name: ExampleField
                  namespace: "http://example.com/xml"
                  prefix: "req"
      responses:
        200:
          description: "Successful response"
          schema:
            type: object
            xml:
              name: ResponseRoot
              namespace: "http://example.com/xml"
              prefix: "res"
            properties:
              exampleField:
                type: string
                description: "An example field"
                xml:
                  name: ExampleField
                  namespace: "http://example.com/xml"
                  prefix: "res"
